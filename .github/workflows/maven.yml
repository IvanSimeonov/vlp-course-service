# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: vlp
          MYSQL_DATABASE: vlp

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Setup Temporary Database
      run: |
        mysql -hlocalhost -uroot -p vlp -e "CREATE DATABASE IF NOT EXISTS vlp;"
        # Optionally, you can also run other scripts to initialize the database schema or data here.
      env:
        MYSQL_ROOT_PASSWORD: vlp

    - name: Wait for Database
      run: |
        while ! mysqladmin ping -hlocalhost -uroot -p vlp --silent; do
          echo "Waiting for the database to become available..."
          sleep 1
        done
      env:
        MYSQL_ROOT_PASSWORD: vlp
        
    - name: Build with Maven
      run: mvn clean install

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
